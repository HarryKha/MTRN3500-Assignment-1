// Assignment1.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
/*
#include "../..//PCM3718.h"
#include "../..//DAC06.h"
#include "../..//MSIP404.h"
#include "../..//EmbeddedOperations.h"
*/

#include "PCM3718.h"
#include "DAC06.h"
#include "MSIP404.h"
#include "EmbeddedOperations.h"

int main() {
	EmbeddedOperations eops;
	//EmbeddedDevice::DAC06 DAC(&eops, 0x320);
	//EmbeddedDevice::MSIP404 MSI(&eops, 0x200);
	EmbeddedDevice::PCM3718 PCM(&eops, 0x300);
	//EmbeddedDevice::PCM3718 PCMADC(&eops, 0x300, 0);
	
	for(int i = 0; i < 0xFF; i++){
		PCM.digitalOutput(i);
		usleep(5000);
	}
	
	PCM.digitalOutput(0xAAAA);
	usleep(1000000);
	PCM.digitalByteOutput(1, 5 | 5 << 4);
	PCM.digitalByteOutput(0, 5 | 5 << 4);
	PCM.setRange(0);
	PCM.digitalOutput(0xffff);

	std::cout << PCM << std::endl;
/*

	std::cout << PCM.digitalInput() << std::endl;

	std::cout << PCM.digitalByteInput(1) << std::endl;
	std::cout << PCM.digitalByteInput(0) << std::endl;

	std::cout << PCM.digitalBitInput(0) << std::endl;
	std::cout << PCM.digitalBitInput(1) << std::endl;
	std::cout << PCM.digitalBitInput(2) << std::endl;
	std::cout << PCM.digitalBitInput(3) << std::endl;
	std::cout << PCM.digitalBitInput(4) << std::endl;
	std::cout << PCM.digitalBitInput(5) << std::endl;
	std::cout << PCM.digitalBitInput(6) << std::endl;
	std::cout << PCM.digitalBitInput(7) << std::endl;
	std::cout << PCM.digitalBitInput(8) << std::endl;
	std::cout << PCM.digitalBitInput(9) << std::endl;
	std::cout << PCM.digitalBitInput(10) << std::endl;
	std::cout << PCM.digitalBitInput(11) << std::endl;
	std::cout << PCM.digitalBitInput(12) << std::endl;
	std::cout << PCM.digitalBitInput(13) << std::endl;
	std::cout << PCM.digitalBitInput(14) << std::endl;
	std::cout << PCM.digitalBitInput(15) << std::endl;

		PCM.digitalOutput(0xAA);
	std::cout << PCM.digitalByteInput(1) << std::endl;
	std::cout << PCM.digitalByteInput(0) << std::endl;

	PCM.digitalByteOutput(1, 5);
	PCM.digitalByteOutput(0, 5);
	std::cout << PCM.digitalByteInput(1) << std::endl;
	std::cout << PCM.digitalByteInput(0) << std::endl;

	PCMADC.setRange(4);
	std::cout << PCMADC.analogInput(1) << std::endl;

	

	MSI.resetChannel(1);
	std::cout << MSI.readChannel(1);
	MSI.readIndex(1);

	DAC.analogOutputRaw(0, 0x0FFF);
	DAC.analogOutputVoltage(0, 5);
	DAC.analogOutputVoltage(0, -5);
	DAC.analogOutputVoltage(0, 0);
	MSI.operator!();

*/
	return 0;
}